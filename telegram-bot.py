import sqlite3

import telebot
from telebot import types


class MyBot:
    def __init__(self):
        self.token = "6814815937:AAHFPDAsUL4OKlPXy70TvVy_NhBXOeuZrBg"
        self.bot = telebot.TeleBot("6814815937:AAHFPDAsUL4OKlPXy70TvVy_NhBXOeuZrBg")
        self.name = ''

        @self.bot.message_handler(commands=["start"])
        def start_bot(message):
            conn = sqlite3.connect('my_database.sql')
            cur = conn.cursor()
            cur.execute('CREATE TABLE IF NOT EXISTS users (id int auto_increment primary key, name varchar(50), pass varchar(50))')

            conn.commit()
            cur.close()
            conn.close()

            self.bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —Å–µ–π—á–∞—Å —Ç–µ–±—è –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä—É—é!")
            self.bot.register_next_step_handler(message, self.user_name)


            # self.bot.send_message(message.chat.id, "„Åä„ÅØ„Çà„ÅÜ (–æ—Ö–∞–π—ë), –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É\n\tüé∂üéµüé∂ –º—É–∑. –≥—Ä—É–ø–ø—É <b>–ñ–≥—É—Ç</b> üé∂üéµüé∂",
            #                       parse_mode="html")
            # self.bot.send_message(message.chat.id, "–û–π, —Ç–æ –µ—Å—Ç—å, üé∏üéπüéß <em>—à–∫–æ–ª—å–Ω—ã–π –∫–ª—É–± —Ä–µ–ø–µ—Ç–∏—Ü–∏–π</em> üéßüéπüé∏,\n—ç—Ö–µ-—Ö–µ...",
            #                       parse_mode="html")
            # self.bot.send_message(message.chat.id, "...")
            # self.bot.send_message(message.chat.id, "–¢–æ –µ—Å—Ç—å...\n\n–ê, –Ω–µ –±–µ—Ä–∏ –≤ –≥–æ–ª–æ–≤—É, –∫–æ—Ä–æ—á–µ, –º—ã –æ—á–µ–Ω—å —Ä–∞–¥—ã —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å"
            #                                      " –∑–¥–µ—Å—å, –≤ –Ω–∞—à–µ–º –Ω–µ–±–æ–ª—å—à–æ–º —Ö—Ä–∞–º–µ!")

            # self.set_main_menu_buttons(message)

        @self.bot.message_handler(commands=["sticker"])
        def send_sticker(message):
            self.bot.send_sticker(message.chat.id, sticker="CAACAgQAAxkBAAECKm1lZIpxEdo0ULeVLnqtgQ75_AF43AAC9wwAAtBU0VAJXmbeRL2ROjME")

        @self.bot.message_handler(commands=["help"])
        def send_help_info(message):
            self.bot.send_message(message.chat.id, "–ü–æ–º–æ–≥—É, —á–µ–º —Å–º–æ–≥—É!")
            self.bot.send_message(message.chat.id, "–ü—Ä–∞–≤–¥–∞, –ø–æ–∫–∞ —á—Ç–æ –Ω–µ —á–µ–º...")

        @self.bot.message_handler()
        def send_help_info(message):
            self.bot.send_message(message.chat.id, "–Ø –µ—â–µ —É—á—É—Å—å, –∏–∑–≤–∏–Ω–∏, –µ—Å–ª–∏ —ç—Ç–æ —á—Ç–æ-—Ç–æ –≤–∞–∂–Ω–æ–µ(")

    def run(self):
        self.bot.polling(none_stop=True)

    def set_main_menu_buttons(self, message):
        markup = types.ReplyKeyboardMarkup()

        btn1 = types.KeyboardButton("–î–∞–π —Å—Ç–∏–∫–µ—Ä—ã")
        btn2 = types.KeyboardButton("–ö–∞–∫–∏–µ –∞–Ω–∏–º–µ —Ç—ã –∑–Ω–∞–µ—à—å?")
        btn3 = types.KeyboardButton("–ß—Ç–æ —Ç—ã –∑–Ω–∞–µ—à—å –ø—Ä–æ –ú–∏–∫—É?")

        markup.row(btn1, btn2)
        markup.add(btn3)

        self.bot.send_sticker(message.chat.id, sticker="CAACAgQAAxkBAAECKm1lZIpxEdo0ULeVLnqtgQ75_AF43AAC9wwAAtBU0VAJXmbeRL2ROjME", reply_markup=markup)

    def user_name(self, message):
        self.name = message.text.strip()

        self.bot.send_message(message.chat.id, "–ü—Ä–∏–¥—É–º–∞–π –ø–∞—Ä–æ–ª—å")
        self.bot.register_next_step_handler(message, self.user_pass)

    def user_pass(self, message):
        password = message.text.strip()

        conn = sqlite3.connect('my_database.sql')
        cur = conn.cursor()
        cur.execute(
            "INSERT INTO users (name, pass) VALUES ('%s', '%s')" % (self.name, password))

        conn.commit()
        cur.close()
        conn.close()

        markup = types.InlineKeyboardMarkup()
        button = types.InlineKeyboardButton("–ö—Ç–æ —Ç—É—Ç –∂–∏–≤–µ—Ç?", callback_data="friends")
        markup.add(button)
        self.bot.send_message(message.chat.id, "–¢—ã –∑–∞—Ä–µ–≥–∞–Ω!", reply_markup=markup)

        @self.bot.callback_query_handler(func=lambda call: True)
        def callback(call):
            conn = sqlite3.connect('my_database.sql')
            cur = conn.cursor()
            cur.execute(
                "SELECT * FROM users")
            users = cur.fetchall()
            info = ''

            for user in users:
                info += f"–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user[1]}, –ø–∞—Ä–æ–ª—å: {user[2]}"

            cur.close()
            conn.close()

            self.bot.send_message(call.message.chat.id, info)


if __name__ == "__main__":
    bot = MyBot()
    bot.run()



